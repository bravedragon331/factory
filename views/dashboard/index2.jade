doctype html
html(lang='en')
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    meta(http-equiv='X-UA-Compatible', content='IE=edge')
    title Notice from Factory
    // Favicon
    link(rel='icon', href='favicon.ico', type='image/x-icon')
    // Google Fonts
    link(href='https://fonts.googleapis.com/css?family=Open+Sans:400,600,700', rel='stylesheet')
    link(href='https://fonts.googleapis.com/icon?family=Material+Icons', rel='stylesheet', type='text/css')
    // Bootstrap Core Css
    link(href='/assets/plugins/bootstrap/dist/css/bootstrap.min.css', rel='stylesheet')
    // Animate.css Css
    link(href='/assets/plugins/animate-css/animate.min.css', rel='stylesheet')
    // Font Awesome Css
    link(href='/assets/plugins/font-awesome/css/font-awesome.min.css', rel='stylesheet')
    // iCheck Css
    link(href='/assets/plugins/iCheck/skins/flat/_all.css', rel='stylesheet')
    // Switchery Css
    link(href='/assets/plugins/switchery/dist/switchery.min.css', rel='stylesheet')
    // Metis Menu Css
    link(href='/assets/plugins/metisMenu/dist/metisMenu.min.css', rel='stylesheet')
    // Jquery Datatables Css
    link(href='/assets/plugins/DataTables/media/css/dataTables.bootstrap.min.css', rel='stylesheet')
    // Pace Loader Css
    link(href='/assets/plugins/pace/themes/white/pace-theme-flash.css', rel='stylesheet')
    // Select 2 Css
    link(href='/assets/plugins/select2/dist/css/select2.min.css', rel='stylesheet')

    // Custom Css
    link(href='/assets/css/style.min.css', rel='stylesheet')
    // AdminBSB Themes. You can choose a theme from css/themes instead of get all themes
    link(href='/assets/css/themes/allthemes.min.css', rel='stylesheet')
    // Custom Css
    link(href='/assets/css/custom.css', rel='stylesheet')
    // Loader Css
    link(href='/assets/css/loader.css', rel='stylesheet')
    link(href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet")
    style.
      .dashboard2 * { background-color: black !important; border-color: black !important; color: white !important; }
      .table *{
        border-color: #777777 !important;
      }
      footer { background-color: black !important; color: white !important; }
      html { 
        background-color: black; 
      }
      .dashboard2 { background-color: black; }
      .content {
        margin: 0px !important;
      }
      .date {
        text-align: center;
        margin-top: -15px;
        vertical-align: middle;
      }
      body {
        font-family: 'Roboto', sans-serif !important;
      }
      .dashboard2 .col-md-3, .col-md-6 {
        padding-left: 0px;
        padding-right: 0px;
      }
      .dashboard2 .c3-chart {
        stroke-width: 0;
      }
      .dashboard2 .c3-legend-item-Target .c3-legend-item-tile {
        stroke: rgb(255, 255, 255) !important;
        pointer-events: none;
      }

    script(src="https://cdn.onesignal.com/sdks/OneSignalSDK.js" async="")
    script.
      var OneSignal = window.OneSignal || [];
      OneSignal.push(function() {
        OneSignal.init({
          appId: "ff94eaec-20e9-4d21-bbac-e28aeb0fc792",
          autoRegister: false,
          notifyButton: {
            enable: true,
          },
        });
      });
  body
    .all-content-wrapper
      section.content.dashboard2
        .page-heading      
          div(style="display:inline-block;")
            h1 #{__('DAILY')} #{__('STATUS')}
          div.date-wrapper(style="display: inline-block; position: relative; margin-left: 30px;")
            span.previous-date
              i.material-icons navigate_before
            input.date#datetimepicker1(type='text', data-format='YYYY-MM-DD')
            span.next-date
              i.material-icons navigate_next
            
        .page-body
          // Infobox
          .row.clearfix
            .col-lg-6.col-md-6.col-sm-12.col-xs-12.pr-20
              .row
                .col-md-3
                  .caption #{__('DAILY')} #{__('META')}
                  div
                    .large.meta 0
                    | &nbsp
                    .small AVG.
                      span.avg 0
                .col-md-3
                  .caption #{__('ACTUAL')} #{__('PRODUCTION')}
                  div
                    .large.sum 0
                    | &nbsp
                    .small.balance1(style='color: yellow !important;')
                    //- .small.balance2(style='color: red !important;')
                .col-md-3
                  .caption #{__('$.PROD.AMOUNT')}
                  div
                    .large.max 0
                    | &nbsp
                    //- .small.line(style='color: orange !important;')
                .col-md-3
                  .caption #{__('SEW WORKER')}
                  div
                    .large.workers 0                    
              .row.mt-15
                .col-md-6.chart-wrapper-1
                  .chart-title
                    | #{__('PRODUCTION')}
                  //canvas#chart_bar(width="500" height="400")
                  #chart_bar
                  
                .col-md-6.chart-wrapper-2
                  .chart-title
                    | #{__('INSPECTION')}
                  canvas#pie_chart(height="250", style='margin-top: 30px;')
              .row.mt-15
                .table-title #{__('FABRIC')}
                table.table.fabric-table
                  thead
                    tr
                      th #{__('I/O')}
                      th #{__('BUYER')}
                      th #{__('FILE#')}
                      th #{__('STYLE')}
                      th #{__('FABRIC')}
                      th #{__('COLOR')}
                      th #{__('IN/OUT')}
                      th.t-r #{__('YDS')}
                      th.t-r #{__('TOTAL')}
                  tbody                
              .row.mt-15
                .table-title #{__('PRINT')}
                table.table.print-table
                  thead
                    tr
                      th #{__('I/O')}
                      th #{__('BUYER')}
                      th #{__('FILE#')}
                      th #{__('STYLE')}                  
                      th #{__('COLOR')}
                      th #{__('IN/OUT')}
                      th.t-r #{__('QTY')}
                      th.t-r #{__('TOTAL')}
                      th.t-r #{__('BALANCE')}
                      th.t-r %
                  tbody
              .table-title #{__('PACKING')}
                table.table.finish-table
                  thead
                    tr
                      th #{__('BUYER')}
                      th #{__('FILE#')}
                      th #{__('STYLE')}                  
                      th #{__('PO#')}
                      th #{__('COLOR')}
                      //- th #{__('SIZE')}
                      th.t-r #{__('QTY')}
                      th.t-r #{__('BALANCE')}
                      th.t-r %
                  tbody
            .col-lg-6.col-md-6.col-sm-12.col-xs-12.pl-20
              .row
                .table-title #{__('CUT')}
                table.table.cut-table
                  thead
                    tr
                      th #{__('BUYER')}
                      th #{__('FILE#')}
                      th #{__('STYLE')}                  
                      th #{__('FABRIC')}
                      th #{__('COLOR')}
                      th.t-r #{__('YDS')}
                      th.t-r #{__('BALANCE')}
                      th.t-r %
                  tbody                
              .row.mt-15
                .table-title #{__('SHIPMENT')}  
                .col-md-6.chart-wrapper-4
                  .chart-title(style='font-size: 1.2em;')
                    | #{__('YEAR')} #{__('TOTAL')}
                  canvas#pie_chart_ship_week(height="250", style='margin-top: 30px;')
                .col-md-6.chart-wrapper-3
                  .chart-title(style='font-size: 1.2em;')
                    | #{__('WEEK')} #{__('TOTAL')}                  
                  canvas#chart_ship_year
                
              .row.mt-15
                .table-title #{__('MATERIAL')}
                table.table.material_table
                  thead
                    tr
                      th #{__('I/O')}
                      th #{__('BUYER')}
                      th #{__('FILE#')}
                      th #{__('STYLE')}                  
                      th #{__('MATERIAL')}
                      th #{__('IN/OUT')}
                      th.t-r #{__('QTY')}
                      th.t-r #{__('TOTAL')}
                  tbody
                    
              .row.mt-15
                .table-title #{__('WASH')}
                table.table.wash-table
                  thead
                    tr
                      th #{__('I/O')}
                      th #{__('BUYER')}
                      th #{__('FILE#')}
                      th #{__('STYLE')}                  
                      th #{__('COLOR')}
                      th #{__('IN/OUT')}
                      th.t-r #{__('QTY')}
                      th.t-r #{__('TOTAL')}
                      th.t-r #{__('BALANCE')}
                      th.t-r %
                  tbody                

    //Page Loader
    .lds-spinner
      div
      div
      div
      div
      div
      div
      div
      div
      div
      div
      div
      div
    // Jquery Core Js
    script(src='/assets/plugins/jquery/dist/jquery.min.js')
    // JQuery UI Js
    script(src='/assets/plugins/jquery-ui/jquery-ui.min.js')
    // Bootstrap Core Js
    script(src='/assets/plugins/bootstrap/dist/js/bootstrap.min.js')
    // Pace Loader Js
    script(src='/assets/plugins/pace/pace.min.js')
    // Screenfull Js
    script(src='/assets/plugins/screenfull/dist/screenfull.min.js')
    // Metis Menu Js
    script(src='/assets/plugins/metisMenu/dist/metisMenu.min.js')
    // Jquery Slimscroll Js
    script(src='/assets/plugins/jquery-slimscroll/jquery.slimscroll.min.js')
    // Switchery Js
    script(src='/assets/plugins/switchery/dist/switchery.min.js')
    
    // JQuery Datatables Js
    script(src='/assets/plugins/DataTables/media/js/jquery.dataTables.min.js')
    script(src='/assets/plugins/DataTables/media/js/dataTables.bootstrap.min.js')
    script(src='/assets/plugins/DataTables/extensions/export/dataTables.buttons.min.js')
    script(src='/assets/plugins/DataTables/extensions/export/buttons.bootstrap.min.js')
    script(src='/assets/plugins/DataTables/extensions/export/buttons.flash.min.js')
    script(src='/assets/plugins/DataTables/extensions/export/jszip.min.js')
    script(src='/assets/plugins/DataTables/extensions/export/pdfmake.min.js')
    script(src='/assets/plugins/DataTables/extensions/export/vfs_fonts.js')
    script(src='/assets/plugins/DataTables/extensions/export/buttons.html5.min.js')
    script(src='/assets/plugins/DataTables/extensions/export/buttons.print.min.js')

    // Select 2 Js
    script(src='/assets/plugins/select2/dist/js/select2.min.js')

    // Custom Js
    script(src='/assets/js/admin.js')

    script(type='text/javascript').
      $(document).ready(function(){
        $("#leftmenu").load("leftmenu.html")
        $('.js-example-basic-multiple').select2();
        
        $('.lds-spinner').fadeOut();
      });
    script(src="/assets/plugins/d3/d3.js")
    script(src="/assets/plugins/c3/c3.js")
    script(src='/assets/plugins/moment/moment.js')
    script(src='/assets/plugins/eonasdan-bootstrap-datetimepicker/src/js/bootstrap-datetimepicker.js')
    script(src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js")
    script.
      $(".date").datetimepicker({
        format: 'YYYY-MM-DD',
        showClear: true
      });
      $('.date').val(new Date().getFullYear()+'-'+("0"+(new Date().getMonth()+1)).slice(-2)+'-'+("0" + new Date().getDate()).slice(-2));


      //$('.fabric-table').dataTable();
      var getFabricTable = function() {
        $.ajax({
          url: '/dashboard2/fabric',
          type: 'POST',
          data: {
            date: $('.date').val()
          },
          success: function(result) {
            if(result.isSuccess) {
              var ht = '';
              for(var i = 0; i < result.fabricin.length; i++) {              
                ht += `<tr>
                      <td style="color: #3388ff !important;">IN</td>
                      <td>`+result.fabricin[i].buyername+`</td>
                      <td>`+result.fabricin[i].order_name+`</td>
                      <td>`+result.fabricin[i].style+`</td>
                      <td>`+result.fabricin[i].fabric+`</td>
                      <td>`+result.fabricin[i].color+`</td>
                      <td>`+result.fabricin[i].customer+`</td>
                      <td class='t-r'>`+result.fabricin[i].yds+`</td>
                      <td class='t-r' style="color: #00ff3e !important;">`+result.fabricin[i].total+`</td>
                      </tr>`;
              }
              for(var i = 0; i < result.fabricout.length; i++) {
                ht += `<tr>
                      <td style="color: rgb(246, 178, 37) !important;">OUT</td>
                      <td>`+result.fabricout[i].buyername+`</td>
                      <td>`+result.fabricout[i].order_name+`</td>
                      <td>`+result.fabricout[i].style+`</td>
                      <td>`+result.fabricout[i].fabric+`</td>
                      <td>`+result.fabricout[i].color+`</td>
                      <td>`+result.fabricout[i].customer+`</td>
                      <td class='t-r'>`+result.fabricout[i].yds+`</td>
                      <td class='t-r' style="color: #00ff3e !important;">`+result.fabricout[i].total+`</td>
                      </tr>`;
              }
              $('.fabric-table tbody').html(ht);
            } else {
              alert('Cannot load Fabric Data. Please contact support team.');
            }
          }
        })
      }

      var getPrintTable = function() {
        $.ajax({
          url: '/dashboard2/print',
          type: 'POST',
          data: {
            date: $('.date').val()
          },
          success: function(result) {
            if(result.isSuccess) {
              var ht = '';
              for(var i = 0; i < result.printout.length; i++) {              
                ht += `<tr>
                      <td style="color: #3388ff !important;">OUT</td>
                      <td>`+result.printout[i].buyername+`</td>
                      <td>`+result.printout[i].order_name+`</td>
                      <td>`+result.printout[i].style+`</td>
                      <td>`+result.printout[i].color+`</td>
                      <td>`+result.printout[i].customer+`</td>
                      <td class='t-r'>`+result.printout[i].pcs+`</td>
                      <td class='t-r' style="color: #00ff3e !important;">`+result.printout[i].total+`</td>`;
                if(Number(result.printout[i].total) - Number(result.printout[i].orderdetail_pcs) < 0) {
                  ht += `<td class='t-r' style="color: red !important;">`+(Number(result.printout[i].total) - Number(result.printout[i].orderdetail_pcs))+`</td>`;
                } else {
                  ht += `<td class='t-r' style="color: #3388ff !important;">`+(Number(result.printout[i].total) - Number(result.printout[i].orderdetail_pcs))+`</td>`;
                }
                if((Number(result.printout[i].total) - Number(result.printout[i].orderdetail_pcs))/Number(result.printout[i].orderdetail_pcs)*100 < 100) {
                  ht += `<td class='t-r' style="color: rgb(246, 178, 37) !important;">`+((Number(result.printout[i].total) - Number(result.printout[i].orderdetail_pcs))/Number(result.printout[i].orderdetail_pcs)*100).toFixed(2)+`</td>`;
                } else {
                  ht += `<td class='t-r' style="color: #00ff3e !important;">`+((Number(result.printout[i].total) - Number(result.printout[i].orderdetail_pcs))/Number(result.printout[i].orderdetail_pcs)*100).toFixed(2)+`</td>`;
                }
                ht += `</tr>`;
              }
              for(var i = 0; i < result.printreturn.length; i++) {              
                ht += `<tr>
                      <td style="color: rgb(246, 178, 37) !important;">RETURN</td>
                      <td>`+result.printreturn[i].buyername+`</td>
                      <td>`+result.printreturn[i].order_name+`</td>
                      <td>`+result.printreturn[i].style+`</td>
                      <td>`+result.printreturn[i].color+`</td>
                      <td>`+result.printreturn[i].customer+`</td>
                      <td class='t-r'>`+result.printreturn[i].pcs+`</td>
                      <td class='t-r' style="color: #00ff3e !important;">`+result.printreturn[i].total+`</td>`;
                if(Number(result.printreturn[i].total) - Number(result.printreturn[i].orderdetail_pcs) < 0) {
                  ht += `<td class='t-r' style="color: red !important;">`+(Number(result.printreturn[i].total) - Number(result.printreturn[i].orderdetail_pcs))+`</td>`;
                } else {
                  ht += `<td class='t-r' style="color: #3388ff !important;">`+(Number(result.printreturn[i].total) - Number(result.printreturn[i].orderdetail_pcs))+`</td>`;
                }
                if((Number(result.printreturn[i].total) - Number(result.printreturn[i].orderdetail_pcs))/Number(result.printreturn[i].orderdetail_pcs)*100) {
                  ht += `<td class='t-r' style="color: rgb(246, 178, 37) !important;">`+((Number(result.printreturn[i].total) - Number(result.printreturn[i].orderdetail_pcs))/Number(result.printreturn[i].orderdetail_pcs)*100).toFixed(2)+`</td>`;
                } else {
                  ht += `<td class='t-r' style="color: #00ff3e !important;">`+((Number(result.printreturn[i].total) - Number(result.printreturn[i].orderdetail_pcs))/Number(result.printreturn[i].orderdetail_pcs)*100).toFixed(2)+`</td>`;
                }
                ht += `</tr>`;                      
              }
              $('.print-table tbody').html(ht);
            } else {
              alert('Cannot load Print Data. Please contact support team.');
            }
          }
        })
      }

      var getCutTable = function() {
        $.ajax({
          url: '/dashboard2/cut',
          type: 'POST',
          data: {
            date: $('.date').val()
          },
          success: function(result) {
            if(result.isSuccess) {
              var ht = '';
              console.log(result.cut_data);
              for(var i = 0; i < result.cut_data.length; i++) {              
                ht += `<tr>
                      <td>`+result.cut_data[i].buyername+`</td>
                      <td>`+result.cut_data[i].order_name+`</td>
                      <td>`+result.cut_data[i].style+`</td>
                      <td>`+result.cut_data[i].fabric+`</td>
                      <td>`+result.cut_data[i].colorname+`</td>
                      <td class='t-r' style="color: rgb(246, 178, 37) !important;">`+Number(result.cut_data[i].yds).toFixed(0)+`</td>`;
                if(Number(result.cut_data[i].total)-Number(result.cut_data[i].yds) < 0) {
                  ht += `<td class='t-r' style="color: red !important;">`+(Number(result.cut_data[i].total)-Number(result.cut_data[i].yds)).toFixed(0)+`</td>`;
                } else {
                  ht += `<td class='t-r' style="color: #3388ff !important;">`+(Number(result.cut_data[i].total)-Number(result.cut_data[i].yds)).toFixed(0)+`</td>`;
                }
                if (Number(result.cut_data[i].total) == 0){
                  ht += `<td/>`;
                } else if((Number(result.cut_data[i].total)-Number(result.cut_data[i].yds))/Number(result.cut_data[i].yds) * 100 < 100) {
                  ht += `<td class='t-r' style="color: #00ff3e !important;">`+((Number(result.cut_data[i].total)-Number(result.cut_data[i].yds))/Number(result.cut_data[i].total) * 100).toFixed(0)+`</td>`;
                } else if((Number(result.cut_data[i].total)-Number(result.cut_data[i].yds))/Number(result.cut_data[i].yds) * 100 > 100){
                  ht += `<td class='t-r' style="color: #00ff3e !important;">`+((Number(result.cut_data[i].total)-Number(result.cut_data[i].yds))/Number(result.cut_data[i].total) * 100).toFixed(0)+`</td>`;
                }
                ht += `</tr>`;
              }
              $('.cut-table tbody').html(ht);
            } else {
              alert('Cannot load Cut Data. Please contact support team.');
            }
          }
        })
      }

      var chart_ship_year;
      var getShipmentTable = function() {
        var curdate = $('.date').val();
        var today = new Date(new Date(curdate).getTime() + new Date().getTimezoneOffset()*60000);
        var jan1 = new Date(today.getFullYear(), 1, 1);
        var day = today.getDay();
        var diff = today.getDate() - day + (day == 0 ? -6:1);
        var week1 = new Date(today.setDate(diff));
        today = new Date();
        const formatDate =  function(date) {
            var d = new Date(date),
                month = '' + (d.getMonth() + 1),
                day = '' + d.getDate(),
                year = d.getFullYear();

            if (month.length < 2) month = '0' + month;
            if (day.length < 2) day = '0' + day;

            return [year, month, day].join('-');
        }

        $.ajax({
          url: '/dashboard2/shipment_range',
          type: 'POST',
          data: {
            startdate: formatDate(week1),
            enddate: formatDate(today)
          },
          success: function(result) {
            console.log(result);
            if(result.isSuccess) {
              alllist = result.shipment_data;
              if(alllist.length == 0 ) {
                $('#pie_chart_ship_week').hide();
                //$('.chart-wrapper-2').hide();
              } else {
                $('.chart-wrapper-4').show();
                $('#pie_chart_ship_week').show();
                var sumlist = [];
                for(var i = 0; i < alllist.length; i++) {
                  var sum = 0;
                  for(var j = 1; j <= 12; j++) {
                    sum += (Number(alllist[i]['size'+j])||0);
                  }
                  sumlist.push({
                    buyer: alllist[i].buyername,
                    sum: sum
                  });
                }
                var buyerlist = [];
                for(var i = 0; i < sumlist.length; i++) {
                  var j;
                  for(j = 0; j < buyerlist.length; j++) {
                    if(buyerlist[j].buyer == sumlist[i].buyer) {
                      buyerlist[j].sum += Number(sumlist[i].sum);
                      break;
                    }
                  }
                  if(j == buyerlist.length) {
                    buyerlist.push(sumlist[i]);
                  }
                }
                // console.log(buyerlist);
                var columns = [];
                var colors = ['#ff3333', '#3333ff', '#008888', '#00ff00', '#ffff00', '#66004d', 
                  '#261a1a', '#1a6600', '#ff6666', '#6f33cc', '#6666ff', '#cc3300', '#ffcc88', '#334066', '#663333', '#ffff33'];
                var colors2 = [];
                var labels = [];

                for(var i = 0; i < buyerlist.length; i++) {
                  var tmp = [];
                  tmp.push(Number(buyerlist[i].sum));
                  columns.push(tmp);
                  tmp = [];
                  tmp.push(colors[i%16]);
                  colors2.push(tmp);
                  labels.push(buyerlist[i].buyer)
                }
                

                console.log(columns, colors, labels);
                var config = {
                  type: 'bar',
                  data: {
                      labels: labels,
                      datasets: [{
                          label: "Customer",
                          data: columns,
                          backgroundColor: 'rgb(1, 192, 200)',
                          
                      }]
                  },
                  options: {
                    responsive: true,
                    legend: {
                      labels: {
                        fontColor: "#fff",
                      }
                    },
                    scales: {
                      yAxes: [{
                        major: {
                          color: 'rgba(255, 255, 255, 1)' // makes grid lines from y axis red
                        },
                        ticks: {
                          fontColor: "#CCC", // this here
                        },
                      }],
                      xAxes: [{
                        major: {
                          color: 'rgba(255, 255, 255, 1)' // makes grid lines from y axis red
                        },
                        ticks: {
                          fontColor: "#CCC", // this here
                        },
                      }]
                    }
                  }
              }
              if(chart_ship_year != null) {
                chart_ship_year.destroy();
              }
              chart_ship_year = new Chart(document.getElementById("chart_ship_year").getContext("2d"), config);
              }
            } else {
              alert('Cannot load Shipment Data. Please contact support team.');
            }      
          }
        })

        $.ajax({
          url: '/dashboard2/shipment_range',
          type: 'POST',
          data: {
            startdate: formatDate(jan1),
            enddate: formatDate(today)
          },
          success: function(result) {
            if(result.isSuccess) {
              alllist = result.shipment_data;
              if(alllist.length == 0 ) {
                $('#pie_chart_ship_week').hide();
                //$('.chart-wrapper-2').hide();
              } else {
                $('.chart-wrapper-4').show();
                $('#pie_chart_ship_week').show();
                var sumlist = [];
                for(var i = 0; i < alllist.length; i++) {
                  var sum = 0;
                  for(var j = 1; j <= 12; j++) {
                    sum += (Number(alllist[i]['size'+j])||0);
                  }
                  sumlist.push({
                    buyer: alllist[i].buyername,
                    sum: sum
                  });
                }
                var buyerlist = [];
                for(var i = 0; i < sumlist.length; i++) {
                  var j;
                  for(j = 0; j < buyerlist.length; j++) {
                    if(buyerlist[j].buyer == sumlist[i].buyer) {
                      buyerlist[j].sum += Number(sumlist[i].sum);
                      break;
                    }
                  }
                  if(j == buyerlist.length) {
                    buyerlist.push(sumlist[i]);
                  }
                }
                // console.log(buyerlist);
                var columns = [];
                var colors = ['#1a6600', '#ff6666', '#6f33cc', '#ffff00', '#66004d', '#00ff00', 
                  '#261a1a', '#6666ff', '#cc3300', '#ffcc88', '#334066', '#663333', '#ff3333', '#3333ff', '#008888', '#ffff33'];
                var colors2 = [];
                var labels = [];

                for(var i = 0; i < buyerlist.length; i++) {
                  var tmp = [];
                  tmp.push(Number(buyerlist[i].sum));
                  columns.push(tmp);
                  tmp = [];
                  tmp.push(colors[i%16]);
                  colors2.push(tmp);
                  labels.push(buyerlist[i].buyer)
                }
                
                var config = {
                    type: 'pie',
                    data: {
                        datasets: [{
                            data: columns,
                            backgroundColor: colors2
                        }],
                        labels: labels
                    },
                    options: {
                        responsive: false,
                        legend: {
                          labels: {
                            fontColor: "white",
                          }
                        },
                    }
                }
                var chart = new Chart(document.getElementById("pie_chart_ship_week").getContext("2d"), config);
              }
            } else {
              alert('Cannot load Shipment yearly Data. Please contact support team.');
            }
          }
        })
      }

      var getMaterialTable = function() {
        $.ajax({
          url: '/dashboard2/material',
          type: 'POST',
          data: {
            date: $('.date').val()
          },
          success: function(result) {
            if(result.isSuccess) {
              var ht = '';
              for(var i = 0; i < result.material_in.length; i++) {
                ht += `
                  <tr>
                    <td style="color: #3388ff !important;">IN</td>
                    <td>`+result.material_in[i].buyername+`</td>
                    <td>`+result.material_in[i].order_name+`</td>
                    <td>`+result.material_in[i].style+`</td>
                    <td>`+result.material_in[i].material+`</td>
                    <td style="color: #3388ff !important;">`+result.material_in[i].customer+`</td>
                    <td class='t-r'>`+result.material_in[i].quantity+`</td>
                    <td class='t-r' style="color: #00ff3e !important;">`+result.material_in[i].total+`</td>
                `;
              }
              for(var i = 0; i < result.material_out.length; i++) {
                ht += `
                  <tr>
                    <td style="color: rgb(246, 178, 37) !important;">OUT</td>
                    <td>`+result.material_out[i].buyername+`</td>
                    <td>`+result.material_out[i].order_name+`</td>
                    <td>`+result.material_out[i].style+`</td>
                    <td>`+result.material_out[i].material+`</td>
                    <td style="color: rgb(246, 178, 37) !important;>`+result.material_out[i].department+`</td>
                    <td class='t-r'>`+result.material_out[i].quantity+`</td>
                    <td class='t-r' style="color: #00ff3e !important;">`+result.material_out[i].total+`</td>
                `;
              }
              $('.material_table tbody').html(ht);
            } else {
              alert('Cannot load Material data. Please contact support team.');
            }
          }
        })
      }

      var getWashTable = function() {
        $.ajax({
          url: '/dashboard2/wash',
          type: 'POST',
          data: {
            date: $('.date').val()
          },
          success: function(result) {
            // console.log(result);
            if(result.isSuccess) {
              var ht = '';
              for(var i = 0; i < result.washout.length; i++) {              
                ht += `<tr>
                      <td style="color: #3388ff !important;">OUT</td>
                      <td>`+result.washout[i].buyername+`</td>
                      <td>`+result.washout[i].order_name+`</td>
                      <td>`+result.washout[i].style+`</td>
                      <td>`+result.washout[i].color+`</td>
                      <td style="color: #3388ff !important;">`+result.washout[i].customer+`</td>
                      <td class='t-r'>`+result.washout[i].pcs+`</td>
                      <td class='t-r' style="color: #00ff3e !important;">`+result.washout[i].total+`</td>`;
                if(Number(result.washout[i].total-result.washout[i].orderdetail_pcs) < 0) {
                  ht += `<td class='t-r' style="color: red !important;">`+(Number(result.washout[i].total-result.washout[i].orderdetail_pcs))+`</td>`;
                } else {
                  ht += `<td class='t-r' style="color: #3388ff !important;">`+(Number(result.washout[i].total-result.washout[i].orderdetail_pcs))+`</td>`;
                }
                if((((result.washout[i].total-result.washout[i].orderdetail_pcs)/result.washout[i].orderdetail_pcs)*100) < 100) {
                  ht += `<td class='t-r' style="color: rgb(246, 178, 37) !important;">`+(((result.washout[i].total-result.washout[i].orderdetail_pcs)/result.washout[i].orderdetail_pcs)*100).toFixed(2)+`</td>`;
                } else {
                  ht += `<td class='t-r' style="color: #00ff3e !important;">`+(((result.washout[i].total-result.washout[i].orderdetail_pcs)/result.washout[i].orderdetail_pcs)*100).toFixed(2)+`</td>`;
                }
                ht += `</tr>`;
              }
              for(var i = 0; i < result.washreturn.length; i++) {              
                ht += `<tr>
                      <td style="color: rgb(246, 178, 37) !important;">RETURN</td>
                      <td>`+result.washreturn[i].buyername+`</td>
                      <td>`+result.washreturn[i].order_name+`</td>
                      <td>`+result.washreturn[i].style+`</td>
                      <td>`+result.washreturn[i].color+`</td>
                      <td style="color: rgb(246, 178, 37) !important;">`+result.washreturn[i].customer+`</td>
                      <td class='t-r'>`+result.washreturn[i].pcs+`</td>
                      <td class='t-r' style="color: #00ff3e !important;>`+(result.washout[i] == undefined ?  0: result.washout[i].total)+`</td>`;
                if(Number(result.washreturn[i].total-result.washreturn[i].orderdetail_pcs) < 0) {
                  ht += `<td class='t-r' style="color: red !important;">`+(Number(result.washreturn[i].total-result.washreturn[i].orderdetail_pcs))+`</td>`;
                } else {
                  ht += `<td class='t-r' style="color: #3388ff !important;">`+(Number(result.washreturn[i].total-result.washreturn[i].orderdetail_pcs))+`</td>`;
                }
                if((((result.washreturn[i].total-result.washreturn[i].orderdetail_pcs)/result.washreturn[i].orderdetail_pcs)*100).toFixed(2) < 100) {
                  ht += `<td class='t-r' style="color: rgb(246, 178, 37) !important;">`+(((result.washreturn[i].total-result.washreturn[i].orderdetail_pcs)/result.washreturn[i].orderdetail_pcs)*100).toFixed(2)+`</td>`;
                } else {
                  ht += `<td class='t-r' style="color: #00ff3e !important;">`+(((result.washreturn[i].total-result.washreturn[i].orderdetail_pcs)/result.washreturn[i].orderdetail_pcs)*100).toFixed(2)+`</td>`;
                }
                ht += `</tr>`;
              }
              $('.wash-table tbody').html(ht);
            }
          }
        })
      }

      var getInspectionData = function() {
        $.ajax({
          url: '/dashboard2/inspection',
          type: 'POST',
          data: {
            date: $('.date').val()
          },
          success: function(data){
            if(data.isSuccess){            
              alllist = data.list;
              if(alllist.length == 0 ) {
                $('#pie_chart').hide();
                //$('.chart-wrapper-2').hide();
              } else {
                $('.chart-wrapper-2').show();
                $('#pie_chart').show();
                var sumlist = [];
                for(var i = 0; i < alllist.length; i++) {
                  var sum = 0;
                  for(var j = 1; j <= 12; j++) {
                    sum += (Number(alllist[i]['n'+j])||0);
                  }
                  sumlist.push({
                    buyer: alllist[i].buyer,
                    sum: sum
                  });
                }
                var buyerlist = [];
                for(var i = 0; i < sumlist.length; i++) {
                  var j;
                  for(j = 0; j < buyerlist.length; j++) {
                    if(buyerlist[j].buyer == sumlist[i].buyer) {
                      buyerlist[j].sum += Number(sumlist[i].sum);
                      break;
                    }
                  }
                  if(j == buyerlist.length) {
                    buyerlist.push(sumlist[i]);
                  }
                }
                // console.log(buyerlist);
                var columns = [];
                var colors = ['#ff3333', '#3333ff', '#008888', '#00ff00', '#ffff00', '#66004d', 
                  '#261a1a', '#1a6600', '#ff6666', '#6f33cc', '#6666ff', '#cc3300', '#ffcc88', '#334066', '#663333', '#ffff33'];
                var colors2 = [];
                var labels = [];

                for(var i = 0; i < buyerlist.length; i++) {
                  var tmp = [];
                  tmp.push(Number(buyerlist[i].sum));
                  columns.push(tmp);
                  tmp = [];
                  tmp.push(colors[i%16]);
                  colors2.push(tmp);
                  labels.push(buyerlist[i].buyer)
                }            
                
                var config = {
                    type: 'pie',
                    data: {
                        datasets: [{
                            data: columns,
                            backgroundColor: colors2
                        }],
                        labels: labels
                    },
                    options: {
                        responsive: false,
                        legend: {
                          labels: {
                            fontColor: "white",
                          }
                        },
                    }
                }
                var chart = new Chart(document.getElementById("pie_chart").getContext("2d"), config);
              }
            } else {
              alert('Cannot load Inspection Data. Please contact support team.');
            }
          }
        });
      }

      var getProductionData = function() {
        $.ajax({
          url: '/dashboard2/production',
          type: 'POST',
          data: {
            date: $('.date').val()
          },
          success: function(result) {
            if(result.isSuccess) {
              if(result.list.length == 0) {
                $('#chart_bar').hide();
                //$('.chart-wrapper-1').hide();
                $('.workers').html(0);
              } else {
                $('.chart-wrapper-1').show();
                $('#chart_bar').show();
                var x = ['x'];
                var x2 = [];
                var sew2 = [];
                var assist2 = [];
                var value = ['Actual'];
                var target = ['Target'];
                var colors = [];
                var sewer = 0, assistant = 0, min = 9999999, max = 0;
                for(var i = 0; i < result.list.length; i++) {
                  if(result.list[i].sewer == undefined || result.list[i].sewer == 'NULL' || result.list[i].sewer == '')
                    result.list[i].sewer = 0;
                  if(result.list[i].assistant == undefined || result.list[i].assistant == 'NULL' || result.list[i].assistant == '')
                    result.list[i].assistant = 0;

                  x.push(result.list[i].line + " (" + result.list[i].sewer + '/' + result.list[i].assistant + ')');
                  var sum = 0;
                  for(var j = 1; j < 13; j++) {
                    sum += Number(result.list[i]['n'+j]);
                  }
                  if(sum / Number(result.list[i].qty) < 0.3) {
                    colors.push('#ff0000')
                  } else if(sum / Number(result.list[i].qty) >= 0.3 && sum / Number(result.list[i].qty) < 0.6) {
                    colors.push('#ffff66')
                  } else if(sum / Number(result.list[i].qty) >= 0.6 && sum / Number(result.list[i].qty) < 0.8) {                    
                    colors.push('#0099ff')
                  } else {
                    colors.push('#00ff00');                    
                  }
                  value.push(Number(sum));
                  var tmp = Number(result.list[i].qty) - Number(sum) > 0? Number(result.list[i].qty) - Number(sum): 0;
                  target.push(tmp);
                  x2.push(Number(sum)/Number(result.list[i].qty)*100);
                  min  = (min > Number(sum)? Number(sum): min);
                  max  = (max < Number(sum)? Number(sum): max);
                  min  = (min > Number(result.list[i].qty)? Number(result.list[i].qty): min);
                  max  = (max < Number(result.list[i].qty)? Number(result.list[i].qty): max);

                  
                  sewer += Number(result.list[i].sewer);
                  assistant += Number(result.list[i].assistant);
                  sew2.push(result.list[i].sewer);
                  assist2.push(result.list[i].assistant);
                }
                var workers = sewer + assistant;
                $('.workers').html(workers);
                // console.log(sew2, assist2);

                var chart = c3.generate({
                  bindto: '#chart_bar',
                  padding: {
                    left: 110
                  },
                  size: {
                    height: 350
                  },
                  bar: {
                    width: 8
                  },
                  data: {
                    x: 'x',
                    columns:
                    [
                      x,
                      value,
                      target
                    ],
                    groups: [
                      ['Actual', 'Target']
                    ],
                    order: null,
                    type: 'bar',
                    labels: {
                      format: function(v, id, i, j) {
                        // console.log(v, id, i, j);
                        if(id == 'Target') {
                          return (x2[i]).toFixed(0) + '%';
                        } else {

                        }                        
                      }
                    },
                    color: function(inColor, data, p) {
                                            
                      if(data.index !== undefined) {
                        if(data.id == 'Actual')
                          return colors[data.index];
                        else if(data.id == 'Target')
                          return '#ffffff'
                      }
                      return inColor;
                    }
                  },
                  axis: {
                    rotated: true,
                    x: {
                      type: 'category',
                      tick: {
                        multiline: false
                      }
                    },
                    x2: {
                      show: true
                    },
                    y: {
                      tick: {
                        format: function(d) {
                          if(max > 5000) {                            
                            if(Number(d) % 1000 == 0){
                              return d + '%';
                            }
                          } else {
                            return d;
                          }                          
                        }
                      }
                    }
                  }
                });
              }
              
            } else {
              // console.log(result);
            }         
          }
        })
      }

      var getFinishData = function() {
        $.ajax({
          url: '/dashboard2/finish',
          type: 'POST',
          data: {
            date: $('.date').val()
          },
          success: function(result) {
            // console.log(result);
            if(result.isSuccess) {
              var ht = '';
              for(var i = 0; i < result.finish_data.length; i++) {
                ht += `<tr>
                  <td>`+result.finish_data[i].buyername+`</td>
                  <td>`+result.finish_data[i].order_name+`</td>
                  <td>`+result.finish_data[i].style+`</td>
                  <td>`+result.finish_data[i].po+`</td>
                  <td>`+result.finish_data[i].color+`</td>`;
                var finish_qty = 0, finish_total = 0;
                for(var j = 1; j < 11; j++) {
                  if(result.finish_data[i]['size'+j] != '0' && result.finish_data[i]['s'+j] != '-1') {
                    finish_qty += Number(result.finish_data[i]['size'+j]);
                  }
                }
                finish_total = result.finish_data[i].orderdetail_pcs;
                ht += `<td class='t-r'>`+finish_qty+`</td>`;
                if(Number(finish_qty)-Number(finish_total) < 0) {
                  ht += `<td class='t-r' style="color: red !important;">`+(Number(finish_qty)-Number(finish_total))+`</td>`;
                } else {
                  ht += `<td class='t-r' style="color: #3388ff !important;">`+(Number(finish_qty)-Number(finish_total))+`</td>`;
                }
                if((Number(finish_qty) - Number(finish_total))/Number(finish_total)*100 < 100) {
                  ht += `<td class='t-r' style="color: rgb(246, 178, 37) !important;">`+((Number(finish_qty) - Number(finish_total))/Number(finish_total)*100).toFixed(2)+`</td>`;
                } else {
                  ht += `<td class='t-r' style="color: #00ff3e !important;">`+((Number(finish_qty) - Number(finish_total))/Number(finish_total)*100).toFixed(2)+`</td>`;
                }
                ht += `</tr>`;
              }
              $('.finish-table tbody').html(ht);
            } else {
              alert('Cannot load Finish Data. Please contact support team.');
            }      
          }
        })
      }

      //Get Top Meta Data    
      var getMetaData = function(){
        var nextdate = new Date(new Date($('.date').val()).getTime() + new Date().getTimezoneOffset()*60000);
        $.ajax({
          url: '/dashboard2/metadata',
          type: 'POST',
          data: {
            year: nextdate.getFullYear(),
            month: nextdate.getMonth() + 1,
            day: nextdate.getDate()
          },
          success: function(res){          
            if(res.isSuccess){
              var data = JSON.parse(res.data);
              console.log(data);
              var sum = 0, prod = 0;;
              var meta = 0;
              var linename, max = 0;
              for(var i = 0; i < Object.keys(data).length; i++){
                if(data[Object.keys(data)[i]]['sum'] != undefined){
                  sum += Number(data[Object.keys(data)[i]]['sum']);
                  meta += Number(data[Object.keys(data)[i]]['meta']);
                  prod += Number(data[Object.keys(data)[i]]['prod']);
                  if(max < Number(data[Object.keys(data)[i]]['sum'])){
                    max = Number(data[Object.keys(data)[i]]['sum']);
                    linename = Object.keys(data)[i];                  
                  }
                }
              }
              $('.meta').html(meta);
              $('.sum').html(sum);
              //- if(sum - meta > 0) {
              //-   $('.balance1').show();
              //-   $('.balance1').html(sum - meta);
              //-   $('.balance2').hide();
              //- } else {
              //-   $('.balance2').show();
              //-   $('.balance2').html(sum - meta);
              //-   $('.balance1').hide();
              //- }
              $('.balance1').show();
              if(sum/meta) {
                $('.balance1').html(Number(sum/meta*100).toFixed(0) + '%');
              }
              $('.balance2').hide();
              $('.max').html('$ '+Number(prod).toFixed(1));
              //- $('.line').html(linename);
            }
          }
        })
      }    
      setInterval(getMetaData, 30000);

      var getAverageData = function(){
        $.ajax({
          url: '/dashboard/avgdata',
          type: 'POST',
          data: {
            year: new Date().getFullYear()
          },
          success: function(res){          
            if(res.isSuccess){
              $('.avg').html(Number(res.avg).toFixed(0));
            }
          }
        })
      }
      
      setInterval(getAverageData, 30000);

      var loadData = function() {
        getFabricTable();
        getPrintTable();
        getCutTable();
        getShipmentTable();
        getMaterialTable();
        getWashTable();
        getInspectionData();
        getProductionData();
        getFinishData();
        getMetaData();
        getAverageData();      
      }

      loadData();
      setInterval(function(){ loadData(); }, 60000);

      $('.date').on('dp.change', function(e){
        loadData();
      })

      $('.previous-date').on('click', function() {
        var curdate = $('.date').val();
        // console.log(curdate);
        var nextdate = new Date(new Date(curdate).getTime() - 24 * 60 * 60 * 1000 + new Date().getTimezoneOffset()*60000);
        // console.log(nextdate);
        $('.date').val(new Date(nextdate).getFullYear()+'-'+("0"+(new Date(nextdate).getMonth()+1)).slice(-2)+'-'+("0" + new Date(nextdate).getDate()).slice(-2));
        // console.log($('.date').val());
        loadData();
      })

      $('.next-date').on('click', function() {
        var curdate = $('.date').val();
        // console.log(curdate);
        // console.log(new Date(curdate));
        var nextdate = new Date(new Date(curdate).getTime() + 24 * 60 * 60 * 1000 + new Date().getTimezoneOffset()*60000);
        // console.log(nextdate);
        $('.date').val(nextdate.getFullYear()+'-'+("0"+(nextdate.getMonth()+1)).slice(-2)+'-'+("0" + nextdate.getDate()).slice(-2));
        // console.log($('.date').val());
        loadData();
      })
